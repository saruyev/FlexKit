{
  "AllowedHosts": "*",
  "FlexKit": {
    "Logging": {
      "SuppressedLogLevel": "Error",
      "AutoIntercept": true,
      "DefaultFormatter": "Hybrid",
      "DefaultTarget": "Console",
      "MaxBatchSize": 10,
      "BatchTimeout": "00:00:02",
      "EnableFallbackFormatting": true,
      "FallbackTemplate": "API {MethodName} - Status: {Success} | Duration: {Duration}ms",

      "Services": {
        "FlexKitLoggingAspNetApp.UserService": {
          "LogBoth": true,
          "Level": "Information",
          "Target": "Console",
          "Formatter": "Json",
          "MaskParameterPatterns": ["*email*", "*phone*", "*password*"],
          "MaskPropertyPatterns": ["Email", "PhoneNumber", "Password"],
          "MaskReplacement": "[PII_PROTECTED]"
        },
        "FlexKitLoggingAspNetApp.AuthenticationService": {
          "LogInput": true,
          "Level": "Warning",
          "Target": "Console",
          "Formatter": "CustomTemplate",
          "MaskParameterPatterns": ["*password*", "*token*", "*refresh*"],
          "MaskPropertyPatterns": ["Password", "Token", "RefreshToken"],
          "MaskReplacement": "[AUTH_DATA_MASKED]"
        },
        "FlexKitLoggingAspNetApp.PaymentService": {
          "LogBoth": true,
          "Level": "Warning",
          "Target": "Console",
          "Formatter": "Json",
          "MaskParameterPatterns": ["*card*", "*cvv*", "*credit*"],
          "MaskPropertyPatterns": ["CardNumber", "CVV"],
          "MaskReplacement": "[PAYMENT_DATA_PROTECTED]"
        },
        "FlexKitLoggingAspNetApp.OrderService": {
          "LogInput": true,
          "Level": "Information",
          "Target": "Console",
          "Formatter": "CustomTemplate",
          "ExcludeMethodPatterns": ["GetOrderStatus"]
        },
        "FlexKitLoggingAspNetApp.*Controller": {
          "LogOutput": true,
          "Level": "Information",
          "Target": "Console",
          "Formatter": "Hybrid",
          "ExcludeMethodPatterns": ["Get*Status", "*Health*"]
        }
      },

      "Targets": {
        "Console": {
          "Type": "Console",
          "Enabled": true,
          "SuppressedCategories": ["dummy"],
          "Properties": {
            "IncludeScopes": false,
            "TimestampFormat": "yyyy-MM-dd HH:mm:ss.fff",
            "FormatterType": "Simple",
            "ColorBehavior": "Enabled"
          }
        },
        "Debug": {
          "Type": "Debug",
          "Enabled": true,
          "SuppressedCategories": [],
          "Properties": {
            "LogLevel": "Debug"
          }
        }
      },

      "Templates": {
        "OrderService": {
          "SuccessTemplate": "üì¶ ORDER: {MethodName} completed ‚Üí {OutputValue} | Duration: {Duration}ms",
          "ErrorTemplate": "üí• ORDER FAILED: {MethodName} | {ExceptionType}: {ExceptionMessage}"
        },
        "PaymentService": {
          "SuccessTemplate": "üí≥ PAYMENT: {MethodName} processed ${InputParameters.Amount} ‚Üí Success: {OutputValue.Success} | TXN: {OutputValue.TransactionId}",
          "ErrorTemplate": "üí• PAYMENT FAILED: {MethodName} | Amount: ${InputParameters.Amount} | Error: {ExceptionMessage}"
        },
        "AuthenticationService": {
          "SuccessTemplate": "üîê AUTH: {MethodName} for user '{InputParameters.Username}' ‚Üí Success: {OutputValue.Success}",
          "ErrorTemplate": "üö´ AUTH FAILED: {MethodName} | User: {InputParameters.Username} | Error: {ExceptionMessage}"
        },
        "ComplexWorkflowService": {
          "SuccessTemplate": "‚öôÔ∏è WORKFLOW: {MethodName} | Workflow: {InputParameters.WorkflowId} ‚Üí {OutputValue.ExecutedSteps} steps | Duration: {Duration}ms",
          "ErrorTemplate": "üí• WORKFLOW FAILED: {MethodName} | Workflow: {InputParameters.WorkflowId} | Error: {ExceptionMessage}"
        },
        "FormattingDemoService": {
          "SuccessTemplate": "üé® FORMAT DEMO: {MethodName} with {Formatter} ‚Üí Processed: {OutputValue}",
          "ErrorTemplate": "üí• FORMAT DEMO FAILED: {MethodName} | Error: {ExceptionMessage}"
        },
        "ControllerTemplate": {
          "SuccessTemplate": "üåê API: {TypeName}.{MethodName} ‚Üí HTTP Response | Duration: {Duration}ms",
          "ErrorTemplate": "üí• API ERROR: {TypeName}.{MethodName} | {ExceptionType}: {ExceptionMessage}"
        }
      },

      "Formatters": {
        "Json": {
          "PrettyPrint": false,
          "IncludeTimingInfo": true,
          "CustomPropertyNames": {
            "MethodName": "api_method",
            "Duration": "response_time_ms",
            "Success": "operation_success"
          }
        },
        "Hybrid": {
          "MessageTemplate": "API {MethodName} completed",
          "MetadataSeparator": " | DATA: "
        },
        "CustomTemplate": {
          "StrictValidation": true,
          "CacheTemplates": true,
          "DefaultTemplate": "API Method {TypeName}.{MethodName} executed ‚Üí Success: {Success} | Duration: {Duration}ms",
          "ServiceTemplates": {
            "OrderService": "OrderService",
            "PaymentService": "PaymentService",
            "AuthenticationService": "AuthenticationService",
            "ComplexWorkflowService": "ComplexWorkflowService",
            "FormattingDemoService": "FormattingDemoService"
          }
        },
        "SuccessError": {
          "SuccessTemplate": "‚úÖ API Success: {MethodName} ‚Üí {OutputValue}",
          "ErrorTemplate": "‚ùå API Error: {MethodName} | {ExceptionMessage}"
        }
      }
    }
  }
}