{
  "FlexKit": {
    "Logging": {
      "MaxBatchSize": 1,
      "BatchTimeout": "00:00:01",
      "DefaultFormatter": "Json",
      "EnableFallbackFormatting": true,
      "FallbackTemplate": "FALLBACK: {MethodName} | {ExceptionType}: {ExceptionMessage} | Stack: {StackTrace}",
      "AutoIntercept": true,
      "DefaultTarget": "Console",
      "Services": {
        "LoggingTestConsole.ConfigBased.*": {
          "LogInput": true,
          "Level": "Information",
          "Target": "Console"
        },
        "LoggingTestConsole.ConfigBased.PaymentService": {
          "LogBoth": true,
          "Level": "Warning",
          "ExceptionLevel": "Error",
          "Target": "Debug"
        },
        "LoggingTestConsole.ConfigBased.AdminService": {
          "LogOutput": true,
          "Level": "Debug",
          "Target": "Console"
        },
        "LoggingTestConsole.AutoIntercept.*": {
          "LogInput": true,
          "Level": "Information"
        },
        "LoggingTestConsole.ExclusionPatterns.ExactExclusionService": {
          "LogBoth": true,
          "Level": "Information",
          "ExcludeMethodPatterns": ["ToString", "GetHashCode", "Equals"]
        },
        "LoggingTestConsole.ExclusionPatterns.PrefixExclusionService": {
          "LogInput": true,
          "Level": "Information",
          "ExcludeMethodPatterns": ["Get*", "Set*", "Validate*"]
        },
        "LoggingTestConsole.ExclusionPatterns.SuffixExclusionService": {
          "LogOutput": true,
          "Level": "Information",
          "ExcludeMethodPatterns": ["*Internal", "*Helper", "*Cache"]
        },
        "LoggingTestConsole.ExclusionPatterns.ContainsExclusionService": {
          "LogBoth": true,
          "Level": "Warning",
          "ExcludeMethodPatterns": ["*Temp*", "*Debug*", "*Test*"]
        },
        "LoggingTestConsole.ExclusionPatterns.MixedExclusionService": {
          "LogBoth": true,
          "Level": "Information",
          "ExcludeMethodPatterns": [
            "ToString",
            "Get*",
            "*Internal",
            "*Debug*",
            "Validate*",
            "*Cache"
          ]
        },
        "LoggingTestConsole.ExclusionPatterns.EmptyExclusionService": {
          "LogInput": true,
          "Level": "Information",
          "ExcludeMethodPatterns": []
        },
        "LoggingTestConsole.ExclusionPatterns.*": {
          "LogInput": true,
          "Level": "Debug",
          "ExcludeMethodPatterns": ["*Private*", "Internal*"]
        }
      },
      "Targets": {
        "Debug": {
          "Type": "Debug",
          "Enabled": true,
          "Properties": {
            "LogLevel": "Information"
          }
        },
        "Console": {
          "Type": "Console",
          "Enabled": true,
          "Properties": {
            "FormatterType": "Simple",
            "IncludeScopes": true,
            "TimestampFormat": "yyyy-MM-dd HH:mm:ss.fff ",
            "UseUtcTimestamp": true,
            "ColorBehavior": "Enabled",
            "SingleLine": false,
            "JsonWriterOptions": {
              "Indented": true,
              "IndentSize": 2,
              "JavaScriptEncoder": null
            },
            "LogLevel": "Debug"
          }
        }
      },
      "Templates": {
        "StandardStructured": {
          "Enabled": true,
          "SuccessTemplate": "‚úÖ StandardStructured - SUCCESS: {TypeName}.{MethodName}({InputParameters}) ‚Üí {OutputValue} | Duration: {Duration}ms | Thread: {ThreadId} | Activity: {ActivityId} | Timestamp: {Timestamp}",
          "ErrorTemplate": "‚ùå StandardStructured - ERROR: {TypeName}.{MethodName}({InputParameters}) failed after {Duration}ms | {ExceptionType}: {ExceptionMessage} | StackTrace: {StackTrace} | Thread: {ThreadId} | Activity: {ActivityId} | Timestamp: {Timestamp}"
        },
        "SuccessError": {
          "Enabled": true,
          "SuccessTemplate": "‚úÖ SuccessError - SUCCESS: {TypeName}.{MethodName}({InputParameters}) ‚Üí {OutputValue} | Duration: {Duration}ms | Thread: {ThreadId} | Activity: {ActivityId} | Timestamp: {Timestamp}",
          "ErrorTemplate": "‚ùå SuccessError - ERROR: {TypeName}.{MethodName}({InputParameters}) failed after {Duration}ms | {ExceptionType}: {ExceptionMessage} | StackTrace: {StackTrace} | Thread: {ThreadId} | Activity: {ActivityId} | Timestamp: {Timestamp}"
        },
        "TestService": {
          "Enabled": true,
          "SuccessTemplate": "‚úÖ SUCCESS: {TypeName}.{MethodName}({InputParameters}) ‚Üí {OutputValue} | Duration: {Duration}ms | Thread: {ThreadId} | Activity: {ActivityId} | Timestamp: {Timestamp}",
          "ErrorTemplate": "‚ùå ERROR: {TypeName}.{MethodName}({InputParameters}) failed after {Duration}ms | {ExceptionType}: {ExceptionMessage} | StackTrace: {StackTrace} | Thread: {ThreadId} | Activity: {ActivityId} | Timestamp: {Timestamp}"
        },
        "PaymentService": {
          "Enabled": true,
          "SuccessTemplate": "üí∞ PAYMENT: {MethodName}({InputParameters}) completed in {Duration}ms ‚Üí {OutputValue}",
          "ErrorTemplate": "üí• PAYMENT FAILED: {MethodName}({InputParameters}) | {ExceptionType}: {ExceptionMessage} | Stack: {StackTrace}"
        },
        "Default": {
          "Enabled": true,
          "SuccessTemplate": "üîß {TypeName}.{MethodName} | Input: {InputParameters} | Output: {OutputValue} | Duration: {Duration}ms",
          "ErrorTemplate": "üîß ERROR {TypeName}.{MethodName} | Input: {InputParameters} | {ExceptionType}: {ExceptionMessage} | Stack: {StackTrace}"
        },
        "OrderCalculation": {
          "Enabled": true,
          "SuccessTemplate": "üßÆ CALCULATION: {MethodName} for {InputParameters} ‚Üí Total: {OutputValue} | Duration: {Duration}ms",
          "ErrorTemplate": "‚ùå CALCULATION FAILED: {MethodName} with {InputParameters} | {ExceptionType}: {ExceptionMessage}"
        },
        "ManualOrderService": {
          "Enabled": true,
          "SuccessTemplate": "üì¶ MANUAL ORDER: {MethodName}({InputParameters}) ‚Üí {OutputValue} | Duration: {Duration}ms",
          "ErrorTemplate": "‚ùå MANUAL ORDER FAILED: {MethodName}({InputParameters}) | {ExceptionType}: {ExceptionMessage}"
        },
        "ManualOrderStart": {
          "Enabled": true,
          "SuccessTemplate": "üöÄ MANUAL ORDER STARTED: {MethodName}({InputParameters}) | Thread: {ThreadId} | Activity: {ActivityId}",
          "ErrorTemplate": "üöÄ MANUAL ORDER STARTED: {MethodName}({InputParameters}) | Thread: {ThreadId} | Activity: {ActivityId}"
        },
        "OrderCalculationStart": {
          "Enabled": true,
          "SuccessTemplate": "üßÆ CALCULATION STARTED: {MethodName} for {InputParameters} | Thread: {ThreadId}",
          "ErrorTemplate": "üßÆ CALCULATION STARTED: {MethodName} for {InputParameters} | Thread: {ThreadId}"
        },
        "ExceptionTestStart": {
          "Enabled": true,
          "SuccessTemplate": "üß™ EXCEPTION TEST STARTED: {MethodName}({InputParameters}) | Thread: {ThreadId}",
          "ErrorTemplate": "üß™ EXCEPTION TEST STARTED: {MethodName}({InputParameters}) | Thread: {ThreadId}"
        },
        "ExceptionTestService": {
          "Enabled": true,
          "SuccessTemplate": "‚úÖ EXCEPTION TEST SUCCESS: {MethodName}({InputParameters}) ‚Üí {OutputValue} | Duration: {Duration}ms",
          "ErrorTemplate": "üí• EXCEPTION TEST FAILED: {MethodName}({InputParameters}) | {ExceptionType}: {ExceptionMessage} | Duration: {Duration}ms"
        }
      },
      "Formatters": {
        "CustomTemplate": {
          "StrictValidation": false,
          "CacheTemplates": true,
          "DefaultTemplate": "üìù {TypeName}.{MethodName} | Success: {Success} | Duration: {Duration}ms | Input: {InputParameters} | Output: {OutputValue} | Exception: {ExceptionType} - {ExceptionMessage} | Stack: {StackTrace}",
          "ServiceTemplates": {
            "TestService": "TestService",
            "PaymentService": "PaymentService",
            "ManualOrderService": "ManualOrderService"
          }
        },

        "Json": {
          "PrettyPrint": true,
          "IncludeTimingInfo": true,
          "IncludeThreadInfo": true,
          "IncludeStackTrace": true,
          "CustomPropertyNames": {
            "method_name": "method",
            "duration_ms": "execution_time",
            "stack_trace": "error_stack",
            "input_parameters": "method_input",
            "output_value": "method_output"
          }
        },

        "Hybrid": {
          "IncludeMetadata": true,
          "MetadataSeparator": " | META: ",
          "MessageTemplate": "üìä {TypeName}.{MethodName} | Status: {Success} | Time: {Duration}ms",
          "MetadataFields": [
            "duration",
            "thread_id",
            "activity_id",
            "exception_type",
            "stack_trace",
            "input_parameters",
            "output_value",
            "timestamp",
            "success"
          ]
        }
      }
    }
  }
}